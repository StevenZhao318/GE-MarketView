[{"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js":"1","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx":"2","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx":"3","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js":"4","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx":"5","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js":"6","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js":"7","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js":"8","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\ItemInfo.jsx":"9","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\theme.js":"10"},{"size":186,"mtime":1621897824061,"results":"11","hashOfConfig":"12"},{"size":1536,"mtime":1615670297271,"results":"13","hashOfConfig":"12"},{"size":3137,"mtime":1624076555722,"results":"14","hashOfConfig":"12"},{"size":1465,"mtime":1621912916478,"results":"15","hashOfConfig":"12"},{"size":2923,"mtime":1624074170505,"results":"16","hashOfConfig":"12"},{"size":269983,"mtime":1621323642604,"results":"17","hashOfConfig":"12"},{"size":1035,"mtime":1624076029043,"results":"18","hashOfConfig":"12"},{"size":301,"mtime":1624074558773,"results":"19","hashOfConfig":"12"},{"size":3137,"mtime":1624085132063,"results":"20","hashOfConfig":"12"},{"size":604,"mtime":1624076101712,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6c0kj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx",["45","46"],"import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nconst Items = ({ handleItemsChange }) => {\r\n  return (\r\n    <FormControl>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleItemsChange(e.target.value)}\r\n      >\r\n        {/* {items.map((item, i) => (\r\n            <option key={i} value={item}>\r\n              {item}\r\n            </option>\r\n          ))} */}\r\n\r\n        <option value=\"21028\">Dragon Harpoon</option>\r\n        <option value=\"13233\">Smouldering Stone</option>\r\n        <option value=\"2970\">Mort myre fungus</option>\r\n        <option value=\"223\">Red spiders' eggs</option>\r\n        <option value=\"573\">Air Orb</option>\r\n        <option value=\"10034\">Red chinchompa</option>\r\n        <option value=\"13573\">Dynamite</option>\r\n        <option value=\"24229\">Ornate maul handle</option>\r\n        <option value=\"24587\">Rune Pouch Note</option>\r\n        <option value=\"12900\">Uncharged toxic trident</option>\r\n        <option value=\"12924\">Toxic blowpipe (empty)</option>\r\n        <option value=\"12929\">Serpentine helm (uncharged)</option>\r\n        <option value=\"22547\">Craw's bow (u)</option>\r\n        <option value=\"23956\">Crystal armour seed</option>\r\n        <option value=\"444\">Gold Ore</option>\r\n        <option value=\"563\">Law Rune</option>\r\n        <option value=\"5289\">Palm tree seed</option>\r\n        <option value=\"5502\">Palm sapling</option>\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx",["47","48","49","50"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js",["51","52"],"import axios from 'axios';\r\n\r\nconst HEADER_VALUE =\r\n  'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36 OPR/38.0.2220.41';\r\n\r\nconst urlBase5 =\r\n  'https://prices.runescape.wiki/api/v1/osrs/timeseries?timestep=5m&id=';\r\nconst urlBaseCur = 'https://prices.runescape.wiki/api/v1/osrs/latest?id=';\r\n\r\nconst itemPriceHistory =\r\n  'https://api.weirdgloop.org/exchange/history/osrs/all?id=';\r\n\r\nconst itemInfoBase = 'https://www.osrsbox.com/osrsbox-db/items-json/';\r\n\r\nexport const fetchRawData = async (itemID) => {\r\n  let validUrl = `${itemPriceHistory}573`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${itemPriceHistory}${itemID}`;\r\n    // console.log(\"the cur ID is: \" + itemID);\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    // console.log('Fetched data: ');\r\n    // console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCurData = async (itemID) => {\r\n  let validUrl = `${urlBaseCur}444`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${urlBaseCur}${itemID}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    return data;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchItemInfo = async (itemID) => {\r\n  let validUrl = `${itemInfoBase}444.json`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${itemInfoBase}${itemID}.json`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    return data;\r\n  } catch (error) {}\r\n};\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx",["53","54"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js",["55","56"],"import React from 'react';\r\n\r\nimport { Chart, ItemSelector, SearchBar } from './components';\r\nimport ItemInfo from './components/Cards/ItemInfo';\r\n\r\nimport { useState } from 'react';\r\nimport { Box, Center, VStack, Flex } from '@chakra-ui/react';\r\n\r\nexport default function App() {\r\n  const [item, setItem] = useState('Clay');\r\n\r\n  const handleItemsChange = async (itemID) => {\r\n    console.log('switched Item = ' + itemID);\r\n    setItem(itemID);\r\n  };\r\n\r\n  return (\r\n    <Box h='100%' bg='background.100'>\r\n      <Box p='50px 0 0 50px'>\r\n        <SearchBar handleItemsChange={handleItemsChange} />\r\n      </Box>\r\n\r\n      <Flex dir={{ lg: 'row', base: 'column' }}>\r\n        <Center w='80%' m='40px'>\r\n          <Chart itemID={item} />\r\n        </Center>\r\n        <Center\r\n          as='center'\r\n          bg='grey'\r\n          w={{ lg: '10%', base: '90%' }}\r\n          minH={{ lg: '500', base: '200px' }}\r\n          m='40px 0 40px 0'\r\n        >\r\n          <ItemInfo item={item} />\r\n        </Center>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\ItemInfo.jsx",["57","58","59","60","61"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\theme.js",[],{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":36},{"ruleId":"62","severity":1,"message":"67","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":19},{"ruleId":"62","severity":1,"message":"68","line":69,"column":10,"nodeType":"64","messageId":"65","endLine":69,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":69,"column":16,"nodeType":"64","messageId":"65","endLine":69,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":122,"column":6,"nodeType":"72","endLine":122,"endColumn":14,"suggestions":"73"},{"ruleId":"62","severity":1,"message":"74","line":3,"column":7,"nodeType":"64","messageId":"65","endLine":3,"endColumn":19},{"ruleId":"62","severity":1,"message":"75","line":6,"column":7,"nodeType":"64","messageId":"65","endLine":6,"endColumn":15},{"ruleId":"62","severity":1,"message":"76","line":8,"column":16,"nodeType":"64","messageId":"65","endLine":8,"endColumn":26},{"ruleId":"62","severity":1,"message":"77","line":9,"column":21,"nodeType":"64","messageId":"65","endLine":9,"endColumn":29},{"ruleId":"62","severity":1,"message":"78","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":29},{"ruleId":"62","severity":1,"message":"79","line":7,"column":23,"nodeType":"64","messageId":"65","endLine":7,"endColumn":29},{"ruleId":"62","severity":1,"message":"80","line":4,"column":3,"nodeType":"64","messageId":"65","endLine":4,"endColumn":9},{"ruleId":"62","severity":1,"message":"81","line":10,"column":3,"nodeType":"64","messageId":"65","endLine":10,"endColumn":7},{"ruleId":"62","severity":1,"message":"82","line":12,"column":3,"nodeType":"64","messageId":"65","endLine":12,"endColumn":9},{"ruleId":"62","severity":1,"message":"67","line":18,"column":10,"nodeType":"64","messageId":"65","endLine":18,"endColumn":19},{"ruleId":"70","severity":1,"message":"83","line":41,"column":6,"nodeType":"72","endLine":41,"endColumn":12,"suggestions":"84"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'itemNames' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chartOptions'. Either include it or remove the dependency array. You can also do a functional update 'setChartOptions(c => ...)' if you only need 'chartOptions' in the 'setChartOptions' call.","ArrayExpression",["85"],"'HEADER_VALUE' is assigned a value but never used.","'urlBase5' is assigned a value but never used.","'Typography' is defined but never used.","'nameToID' is defined but never used.","'ItemSelector' is defined but never used.","'VStack' is defined but never used.","'Center' is defined but never used.","'Icon' is defined but never used.","'HStack' is defined but never used.","React Hook useEffect has a missing dependency: 'itemSummary'. Either include it or remove the dependency array.",["86"],{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [chartOptions, itemID]",{"range":"91","text":"92"},"Update the dependencies array to be: [item, itemSummary]",{"range":"93","text":"94"},[2883,2891],"[chartOptions, itemID]",[1096,1102],"[item, itemSummary]"]