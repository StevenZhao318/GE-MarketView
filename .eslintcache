[{"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js":"1","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx":"2","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx":"3","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js":"4","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\CurPriceCard.jsx":"5","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx":"6","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js":"7","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\data.js":"8","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js":"9","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js":"10"},{"size":186,"mtime":1621897824061,"results":"11","hashOfConfig":"12"},{"size":1536,"mtime":1615670297271,"results":"13","hashOfConfig":"12"},{"size":3116,"mtime":1621324562821,"results":"14","hashOfConfig":"12"},{"size":982,"mtime":1621324463379,"results":"15","hashOfConfig":"12"},{"size":1401,"mtime":1616021414161,"results":"16","hashOfConfig":"12"},{"size":1821,"mtime":1621897490294,"results":"17","hashOfConfig":"12"},{"size":269983,"mtime":1621323642604,"results":"18","hashOfConfig":"12"},{"size":38391,"mtime":1615857786308,"results":"19","hashOfConfig":"12"},{"size":1043,"mtime":1621897817640,"results":"20","hashOfConfig":"12"},{"size":257,"mtime":1621583571195,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6c0kj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx",["45","46"],"import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nconst Items = ({ handleItemsChange }) => {\r\n  return (\r\n    <FormControl>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleItemsChange(e.target.value)}\r\n      >\r\n        {/* {items.map((item, i) => (\r\n            <option key={i} value={item}>\r\n              {item}\r\n            </option>\r\n          ))} */}\r\n\r\n        <option value=\"21028\">Dragon Harpoon</option>\r\n        <option value=\"13233\">Smouldering Stone</option>\r\n        <option value=\"2970\">Mort myre fungus</option>\r\n        <option value=\"223\">Red spiders' eggs</option>\r\n        <option value=\"573\">Air Orb</option>\r\n        <option value=\"10034\">Red chinchompa</option>\r\n        <option value=\"13573\">Dynamite</option>\r\n        <option value=\"24229\">Ornate maul handle</option>\r\n        <option value=\"24587\">Rune Pouch Note</option>\r\n        <option value=\"12900\">Uncharged toxic trident</option>\r\n        <option value=\"12924\">Toxic blowpipe (empty)</option>\r\n        <option value=\"12929\">Serpentine helm (uncharged)</option>\r\n        <option value=\"22547\">Craw's bow (u)</option>\r\n        <option value=\"23956\">Crystal armour seed</option>\r\n        <option value=\"444\">Gold Ore</option>\r\n        <option value=\"563\">Law Rune</option>\r\n        <option value=\"5289\">Palm tree seed</option>\r\n        <option value=\"5502\">Palm sapling</option>\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx",["47","48","49","50"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Highcharts from 'highcharts/highstock';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { fetchRawData } from '../../api';\r\nimport { Box } from '@chakra-ui/react';\r\nimport styles from './Chart.module.css';\r\n\r\nimport { itemNames, nameToID } from '../../data/ItemList';\r\n\r\nrequire('highcharts/indicators/indicators')(Highcharts);\r\nrequire('highcharts/indicators/trendline')(Highcharts);\r\n\r\nconst color = '#3375cc';\r\n\r\nconst options = {\r\n  title: {\r\n    text: 'My chart',\r\n  },\r\n  series: [\r\n    {\r\n      data: [],\r\n      type: 'spline',\r\n      name: 'AAPL Stock Price',\r\n      id: 'clay',\r\n      color: color,\r\n    },\r\n  ],\r\n  credits: {\r\n    enabled: false,\r\n  },\r\n  tooltip: {\r\n    pointFormat:\r\n      '<span style=\"color:' +\r\n      '{series.color}' +\r\n      '\">' +\r\n      '‚óè' +\r\n      '</span> {series.name}: <b>{point.y:,.0f}</b><br/>',\r\n  },\r\n\r\n  yAxis:\r\n    // { opposite: false },\r\n    [\r\n      {\r\n        labels: {\r\n          align: 'left',\r\n        },\r\n        title: {\r\n          text: 'Price',\r\n        },\r\n        height: '60%',\r\n      },\r\n      {\r\n        labels: {\r\n          align: 'left',\r\n        },\r\n        title: {\r\n          text: 'Volume',\r\n        },\r\n        top: '65%',\r\n        height: '35%',\r\n        offset: 0,\r\n      },\r\n    ],\r\n  chart: { height: '50%' },\r\n};\r\n\r\nconst Chart = ({ itemID }) => {\r\n  console.log(itemID);\r\n  const [data, setData] = useState([]);\r\n  const [chartOptions, setChartOptions] = useState(options);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const ID = nameToID[itemID];\r\n      console.log('itemID is: ' + ID + ' for item ->' + itemID);\r\n      const rawData = await fetchRawData(ID);\r\n\r\n      const data = rawData[ID].map((obj) => [obj.timestamp, obj.price]);\r\n      const volume = rawData[ID].map((obj) => [obj.timestamp, obj.volume]);\r\n      console.log(volume);\r\n\r\n      setChartOptions({\r\n        ...chartOptions,\r\n        title: { text: itemID },\r\n        series: [\r\n          {\r\n            data: data,\r\n            type: 'spline',\r\n            name: itemID,\r\n            id: itemID,\r\n            // showCheckbox: true,\r\n            // selected: true,\r\n            color: color,\r\n          },\r\n          {\r\n            type: 'area',\r\n            name: 'Volume',\r\n            lineWidth: 1,\r\n            crisp: false,\r\n            data: volume,\r\n            color: '#75CC33',\r\n            yAxis: 1,\r\n          },\r\n          // {\r\n          //   type: 'sma',\r\n          //   color: '#CC3375',\r\n          //   name: '30-Day Average',\r\n          //   linkedTo: itemID,\r\n          //   dashStyle: 'ShortDash',\r\n          //   params: {\r\n          //     period: 30,\r\n          //   },\r\n          //   yAxis: 0,\r\n          //   zAxis: 2,\r\n          // },\r\n        ],\r\n      });\r\n    };\r\n    fetchAPI();\r\n  }, [itemID]);\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      <HighchartsReact\r\n        highcharts={Highcharts}\r\n        options={chartOptions}\r\n        constructorType={'stockChart'}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js",["51"],"import axios from 'axios';\r\n\r\nconst urlBase5 =\r\n  'https://prices.runescape.wiki/api/v1/osrs/timeseries?timestep=5m&id=';\r\nconst urlBaseCur = 'https://prices.runescape.wiki/api/v1/osrs/latest?id=';\r\n\r\nconst itemPriceHistory =\r\n  'https://api.weirdgloop.org/exchange/history/osrs/all?id=';\r\n\r\nexport const fetchRawData = async (itemID) => {\r\n  console.log(itemID);\r\n  let validUrl = `${itemPriceHistory}573`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${itemPriceHistory}${itemID}`;\r\n    // console.log(\"the cur ID is: \" + itemID);\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    console.log('Fetched data: ');\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCurData = async (itemID) => {\r\n  let validUrl = `${urlBaseCur}444`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${urlBaseCur}${itemID}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    return data;\r\n  } catch (error) {}\r\n};\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\CurPriceCard.jsx",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx",["52","53"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\data.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js",["54","55","56"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js",[],{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"61","line":1,"column":27,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"62","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":19},{"ruleId":"57","severity":1,"message":"63","line":70,"column":10,"nodeType":"59","messageId":"60","endLine":70,"endColumn":14},{"ruleId":"57","severity":1,"message":"64","line":70,"column":16,"nodeType":"59","messageId":"60","endLine":70,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":121,"column":6,"nodeType":"67","endLine":121,"endColumn":14,"suggestions":"68"},{"ruleId":"57","severity":1,"message":"69","line":3,"column":7,"nodeType":"59","messageId":"60","endLine":3,"endColumn":15},{"ruleId":"57","severity":1,"message":"70","line":8,"column":16,"nodeType":"59","messageId":"60","endLine":8,"endColumn":26},{"ruleId":"57","severity":1,"message":"71","line":9,"column":21,"nodeType":"59","messageId":"60","endLine":9,"endColumn":29},{"ruleId":"57","severity":1,"message":"72","line":3,"column":17,"nodeType":"59","messageId":"60","endLine":3,"endColumn":29},{"ruleId":"57","severity":1,"message":"73","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":20},{"ruleId":"57","severity":1,"message":"74","line":7,"column":23,"nodeType":"59","messageId":"60","endLine":7,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'itemNames' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chartOptions'. Either include it or remove the dependency array. You can also do a functional update 'setChartOptions(c => ...)' if you only need 'chartOptions' in the 'setChartOptions' call.","ArrayExpression",["75"],"'urlBase5' is assigned a value but never used.","'Typography' is defined but never used.","'nameToID' is defined but never used.","'ItemSelector' is defined but never used.","'CurPriceCard' is defined but never used.","'VStack' is defined but never used.",{"desc":"76","fix":"77"},"Update the dependencies array to be: [chartOptions, itemID]",{"range":"78","text":"79"},[2862,2870],"[chartOptions, itemID]"]