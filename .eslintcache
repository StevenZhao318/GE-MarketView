[{"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js":"1","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js":"2","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx":"3","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx":"4","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js":"5","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\CurPriceCard.jsx":"6","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js":"7","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx":"8","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js":"9","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\data.js":"10"},{"size":935,"mtime":1621218200748,"results":"11","hashOfConfig":"12"},{"size":186,"mtime":1615704937008,"results":"13","hashOfConfig":"12"},{"size":1536,"mtime":1615670297271,"results":"14","hashOfConfig":"12"},{"size":2402,"mtime":1621217723278,"results":"15","hashOfConfig":"12"},{"size":985,"mtime":1620980372400,"results":"16","hashOfConfig":"12"},{"size":1401,"mtime":1616021414161,"results":"17","hashOfConfig":"12"},{"size":153,"mtime":1610658111292,"results":"18","hashOfConfig":"12"},{"size":1133,"mtime":1618701237114,"results":"19","hashOfConfig":"12"},{"size":269983,"mtime":1615755848875,"results":"20","hashOfConfig":"12"},{"size":38391,"mtime":1615857786308,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1x6c0kj",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\App.js",["45","46","47","48"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\index.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\ItemSelector\\ItemSelector.jsx",["49","50"],"import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nconst Items = ({ handleItemsChange }) => {\r\n  return (\r\n    <FormControl>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleItemsChange(e.target.value)}\r\n      >\r\n        {/* {items.map((item, i) => (\r\n            <option key={i} value={item}>\r\n              {item}\r\n            </option>\r\n          ))} */}\r\n\r\n        <option value=\"21028\">Dragon Harpoon</option>\r\n        <option value=\"13233\">Smouldering Stone</option>\r\n        <option value=\"2970\">Mort myre fungus</option>\r\n        <option value=\"223\">Red spiders' eggs</option>\r\n        <option value=\"573\">Air Orb</option>\r\n        <option value=\"10034\">Red chinchompa</option>\r\n        <option value=\"13573\">Dynamite</option>\r\n        <option value=\"24229\">Ornate maul handle</option>\r\n        <option value=\"24587\">Rune Pouch Note</option>\r\n        <option value=\"12900\">Uncharged toxic trident</option>\r\n        <option value=\"12924\">Toxic blowpipe (empty)</option>\r\n        <option value=\"12929\">Serpentine helm (uncharged)</option>\r\n        <option value=\"22547\">Craw's bow (u)</option>\r\n        <option value=\"23956\">Crystal armour seed</option>\r\n        <option value=\"444\">Gold Ore</option>\r\n        <option value=\"563\">Law Rune</option>\r\n        <option value=\"5289\">Palm tree seed</option>\r\n        <option value=\"5502\">Palm sapling</option>\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Items;\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\Chart.jsx",["51","52","53"],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\api\\index.js",["54"],"import axios from \"axios\";\r\n\r\nconst urlBase5 =\r\n  \"https://prices.runescape.wiki/api/v1/osrs/timeseries?timestep=5m&id=\";\r\nconst urlBaseCur = \"https://prices.runescape.wiki/api/v1/osrs/latest?id=\";\r\n\r\nconst itemPriceHistory =\r\n  \"https://api.weirdgloop.org/exchange/history/osrs/all?name=\";\r\n\r\nexport const fetchRawData = async (itemID) => {\r\n  console.log(itemID);\r\n  let validUrl = `${itemPriceHistory}Clay`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${itemPriceHistory}${itemID}`;\r\n    // console.log(\"the cur ID is: \" + itemID);\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    console.log(\"Fetched data: \");\r\n    console.log(data);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCurData = async (itemID) => {\r\n  let validUrl = `${urlBaseCur}444`;\r\n\r\n  if (itemID) {\r\n    validUrl = `${urlBaseCur}${itemID}`;\r\n  }\r\n\r\n  try {\r\n    const { data } = await axios.get(validUrl);\r\n    return data;\r\n  } catch (error) {}\r\n};\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Cards\\CurPriceCard.jsx",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\index.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\SearchBar\\SearchBar.jsx",["55"],"/* eslint-disable no-use-before-define */\r\nimport React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete, {\r\n  createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { itemNames, nameToID } from \"../../data/ItemList.js\";\r\n\r\nconst filterLimit = createFilterOptions({\r\n  limit: 100,\r\n});\r\n\r\nconst SearchBar = ({ handleItemsChange }) => {\r\n  return (\r\n    <div style={{ width: 300 }}>\r\n      <Autocomplete\r\n        // freeSolo\r\n        disableClearable\r\n        options={itemNames.map((option) => option.name)}\r\n        onChange={(event, value) => {\r\n          // const id = nameToID[value];\r\n          // console.log(\"Selected Item: \" + value + \" ID: \" + id);\r\n          handleItemsChange(value);\r\n        }}\r\n        filterOptions={filterLimit}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Item\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\data\\ItemList.js",[],"C:\\Users\\steve\\Desktop\\Working\\ge-database\\src\\components\\Chart\\data.js",[],{"ruleId":"56","severity":1,"message":"57","line":3,"column":17,"nodeType":"58","messageId":"59","endLine":3,"endColumn":29},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":20},{"ruleId":"56","severity":1,"message":"61","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":8,"column":23,"nodeType":"58","messageId":"59","endLine":8,"endColumn":29},{"ruleId":"56","severity":1,"message":"63","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"64","line":1,"column":27,"nodeType":"58","messageId":"59","endLine":1,"endColumn":36},{"ruleId":"56","severity":1,"message":"65","line":66,"column":10,"nodeType":"58","messageId":"59","endLine":66,"endColumn":14},{"ruleId":"56","severity":1,"message":"66","line":66,"column":16,"nodeType":"58","messageId":"59","endLine":66,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":100,"column":6,"nodeType":"69","endLine":100,"endColumn":14,"suggestions":"70"},{"ruleId":"56","severity":1,"message":"71","line":3,"column":7,"nodeType":"58","messageId":"59","endLine":3,"endColumn":15},{"ruleId":"56","severity":1,"message":"72","line":8,"column":21,"nodeType":"58","messageId":"59","endLine":8,"endColumn":29},"no-unused-vars","'ItemSelector' is defined but never used.","Identifier","unusedVar","'CurPriceCard' is defined but never used.","'styles' is defined but never used.","'VStack' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chartOptions'. Either include it or remove the dependency array. You can also do a functional update 'setChartOptions(c => ...)' if you only need 'chartOptions' in the 'setChartOptions' call.","ArrayExpression",["73"],"'urlBase5' is assigned a value but never used.","'nameToID' is defined but never used.",{"desc":"74","fix":"75"},"Update the dependencies array to be: [chartOptions, itemID]",{"range":"76","text":"77"},[2148,2156],"[chartOptions, itemID]"]